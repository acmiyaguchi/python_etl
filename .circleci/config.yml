####################
# CircleCI configuration reference:
#   https://circleci.com/docs/2.0/configuration-reference
####################
# CircleCI built-in environment variables:
#   https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables
####################


####################
# Templates: see "anchors" in https://learnxinyminutes.com/docs/yaml/
####################

common_settings: &common_settings
  docker:
    - image: python:2.7
  working_directory: ~/python_mozetl

install_dependencies: &install_dependencies
  name: install dependencies
  command: |
    apt update
    apt install -y libsnappy-dev openjdk-8-jre-headless
    pip install tox coverage

save_cache_settings: &save_cache_settings
  key: v1-python_mozetl-{{ checksum "setup.py" }}
  paths:
    - ~/python_mozetl/.tox

restore_cache_settings: &restore_cache_settings
  key: v1-python_mozetl-{{ checksum "setup.py" }}

early_return_for_skip_tests: &early_return_for_skip_tests
  name: Early return if the latest non-merge commit message contains "[skip-tests]"
  command: |
    COMMIT_MESSAGE=$(git log --format=%B --no-merges -n 1)
    if [[ "$COMMIT_MESSAGE" =~ "[skip-tests]" ]]; then
      echo "Skipping tests due to [skip-tests] flag, so marking this step successful"
      circleci step halt
    fi


####################
# Jobs: see https://circleci.com/docs/2.0/jobs-steps/
####################

version: 2
jobs:

  test:
    <<: *common_settings
    parallelism: 8
    steps:
      - checkout
      - run: *early_return_for_skip_tests
      - restore_cache: *restore_cache_settings
      - run: *install_dependencies
      - run:
          name: run tests
          command: |
            circleci tests glob "tests/**/test*.py" > tests.txt
            tox -- \
              $(circleci tests split --split-by=timings tests.txt | tr -d '\r') \
              --junitxml=test-reports/junit.xml
      - run:
          name: submit code coverage data
          command: |
            # convert `.coverage` to `coverage.xml`
            coverage xml -i
            bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  lint:
    <<: *common_settings
    steps:
      - checkout
      - run: *early_return_for_skip_tests
      - restore_cache: *restore_cache_settings
      - run: *install_dependencies
      - run:
          name: run linter
          command: TOXENV=flake8 tox
      - save_cache: *save_cache_settings


####################
# Workflows: see https://circleci.com/docs/2.0/workflows/
####################

workflows:
  version: 2
  build:
    jobs:
      - test
      - lint
